/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TRANSICION;

import DATABASE.Conexion;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;




public class C_Almacen extends javax.swing.JPanel {

    /**
     * Creates new form Page2
     */
    public C_Almacen() {
        initComponents();
         cargarTabla(); 
         cargarTabla2();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlmacen = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        BtnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        BtnLimpiar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtFechaCaducidad = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtProcedencia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAlmacen2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1100, 550));
        setMinimumSize(new java.awt.Dimension(1100, 550));
        setPreferredSize(new java.awt.Dimension(1040, 600));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setToolTipText("Datos");
        bg.setMaximumSize(new java.awt.Dimension(1100, 550));
        bg.setMinimumSize(new java.awt.Dimension(1100, 550));
        bg.setPreferredSize(new java.awt.Dimension(1355, 701));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/almacen image 3.png"))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("stock");
        jLabel2.setPreferredSize(new java.awt.Dimension(193, 64));

        tblAlmacen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "producto", "cantidad", "fechas de ingreso", "fecha de caducidad", "descripcion", "Procedencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAlmacen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlmacenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAlmacen);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("Datos");
        jPanel1.setPreferredSize(new java.awt.Dimension(483, 369));

        btnGuardar.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        BtnModificar.setBackground(new java.awt.Color(0, 102, 255));
        BtnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnModificar.setForeground(new java.awt.Color(255, 255, 255));
        BtnModificar.setText("Modificar");
        BtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 102, 255));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        BtnLimpiar.setBackground(new java.awt.Color(0, 102, 255));
        BtnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        BtnLimpiar.setText("Linpiar");
        BtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarActionPerformed(evt);
            }
        });

        jLabel3.setText("Producto ");

        jLabel4.setText("cantidad");

        jLabel5.setText("Fecha de ingreso");

        jLabel6.setText("Fecha de Caducidad");

        jLabel7.setText("Descripcion");

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/pdf.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Procedencia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(BtnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnLimpiar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(txtProcedencia)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel6)
                                .addGap(43, 43, 43)
                                .addComponent(txtFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(60, 60, 60)
                                        .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(103, 103, 103)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5))
                            .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel6))
                            .addComponent(txtFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7))
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel8))
                    .addComponent(txtProcedencia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        tblAlmacen2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "producto", "cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAlmacen2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlmacen2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblAlmacen2);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel9.setText("Almacen");
        jLabel9.setPreferredSize(new java.awt.Dimension(193, 64));

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGap(29, 29, 29))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bgLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addGap(1107, 1107, 1107)))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bgLayout.createSequentialGroup()
                    .addGap(169, 169, 169)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addGap(396, 396, 396)))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 1389, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      
                                               
    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");

    String producto = txtProducto.getText();
    String cantidad = txtCantidad.getText();
    String fecha_de_ingreso = dcn.format(txtFechaIngreso.getDate());       
    String fecha_de_caducidad = dcn.format(txtFechaCaducidad.getDate());
    String descripcion = txtDescripcion.getText(); 
    String procedencia = txtProcedencia.getText(); 

    // Verificar si la cantidad es un valor numérico
    try {
        int cantidadInt = Integer.parseInt(cantidad);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "La cantidad debe ser un valor entero", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Connection con = Conexion.getConexion();
        PreparedStatement psInsert = con.prepareStatement("INSERT INTO almacen (producto, cantidad, fecha_ingreso, fecha_caducidad, descripcion, procedencia) VALUES (?, ?, ?, ?, ?, ?)");
        psInsert.setString(1, producto);
        psInsert.setString(2, cantidad);
        psInsert.setString(3, fecha_de_ingreso);
        psInsert.setString(4, fecha_de_caducidad);
        psInsert.setString(5, descripcion);
        psInsert.setString(6, procedencia);
        psInsert.executeUpdate();

        JOptionPane.showMessageDialog(null, "Registro Guardado");
        limpiar();
        cargarTabla();
        cargarTabla2();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }   


        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
//        SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
//        
//              // int id = Integer.parseInt(txtId.getText());
//       String producto = txtProducto.getText();
//       String cantidad = txtCantidad.getText();
//       String fecha_de_ingreso = dcn.format(txtFechaIngreso.getDate());       
//       String fecha_de_caducidad = dcn.format(txtFechaCaducidad.getDate());
//       String descripcion = txtDescripcion.getText(); 
//       String procedencia = txtProcedencia.getText(); 
//        
//     // Verificar si la cantidad es un valor numérico
//    try {
//        int cantidadInt = Integer.parseInt(cantidad);
//    } catch (NumberFormatException e) {
//        JOptionPane.showMessageDialog(null, "La cantidad debe ser un valor entero", "Error", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//  
//       try {
//        Connection con = Conexion.getConexion();
//        PreparedStatement psSelect = con.prepareStatement("SELECT cantidad FROM almacen WHERE producto = ?");
//        psSelect.setString(1, producto);
//        ResultSet rs = psSelect.executeQuery();
//
//        if (rs.next()) {
//            int cantidadExistente = rs.getInt("cantidad");
//            cantidadExistente += Integer.parseInt(cantidad);
//
//            PreparedStatement psUpdate = con.prepareStatement("UPDATE almacen SET cantidad = ? WHERE producto = ?");
//            psUpdate.setInt(1, cantidadExistente);
//            psUpdate.setString(2, producto);
//            psUpdate.executeUpdate();
//        } else {
//            PreparedStatement psInsert = con.prepareStatement("INSERT INTO almacen (producto, cantidad, fecha_ingreso, fecha_caducidad, descripcion, procedencia) VALUES (?, ?, ?, ?, ?, ?)");
//            psInsert.setString(1, producto);
//            psInsert.setString(2, cantidad);
//            psInsert.setString(3, fecha_de_ingreso);
//            psInsert.setString(4, fecha_de_caducidad);
//            psInsert.setString(5, descripcion);
//            psInsert.setString(6, procedencia);
//            psInsert.executeUpdate();
//        }
//
//        JOptionPane.showMessageDialog(null, "Registro Guardado");
//        limpiar();
//        cargarTabla();
//        cargarTabla2();
//    } catch (SQLException e) {
//        JOptionPane.showMessageDialog(null, e.toString());
//    }   
//        
//        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void BtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModificarActionPerformed
     
       SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");

String producto = txtProducto.getText();
int cantidad = Integer.parseInt(txtCantidad.getText());
String fecha_ingreso = dcn.format(txtFechaIngreso.getDate());
String fecha_caducidad = dcn.format(txtFechaCaducidad.getDate());
String descripcion = txtDescripcion.getText();
String procedencia = txtProcedencia.getText();
int id = getIdDelRegistroQueDeseasActualizar(); 

try {
    Connection con = Conexion.getConexion();
    PreparedStatement ps = con.prepareStatement("UPDATE almacen SET producto=?,cantidad=?,fecha_ingreso=?,fecha_caducidad=?,descripcion=?,procedencia=? WHERE id=?");

    ps.setString(1, producto);
    ps.setInt(2, cantidad);
    ps.setString(3, fecha_ingreso);
    ps.setString(4, fecha_caducidad);
    ps.setString(5, descripcion);
    ps.setString(6, procedencia);
    ps.setInt(7, id);

    ps.executeUpdate();

    JOptionPane.showMessageDialog(null,"Registro Modificado");
   // limpiar();
    cargarTabla();
    cargarTabla2();

} catch(SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}
 
        
        
    }//GEN-LAST:event_BtnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
     int id = getIdDelRegistroQueDeseasEliminar(); // Aquí debes obtener el valor correcto de id

try {
    Connection con = Conexion.getConexion();
    PreparedStatement ps = con.prepareStatement("DELETE FROM almacen WHERE id=?");

    ps.setInt(1, id);

    ps.executeUpdate();

    JOptionPane.showMessageDialog(null,"Registro Eliminado");
    limpiar();
    cargarTabla();
    cargarTabla2();

} catch(SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void BtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarActionPerformed
       limpiar();
    }//GEN-LAST:event_BtnLimpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        generarPDF();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblAlmacenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlmacenMouseClicked
      
        try {
           
    int fila = tblAlmacen.getSelectedRow();
    int id = Integer.parseInt(tblAlmacen.getValueAt(fila, 0).toString());

    PreparedStatement ps;
    ResultSet rs;

    Connection con = Conexion.getConexion();

    ps = con.prepareStatement("SELECT producto, cantidad, fecha_ingreso, fecha_caducidad, descripcion, procedencia FROM almacen WHERE id = ?");
    ps.setInt(1, id);
    rs = ps.executeQuery();

    while (rs.next()) {
        txtProducto.setText(rs.getString("producto"));
        txtCantidad.setText(String.valueOf(rs.getInt("cantidad")));
        txtFechaIngreso.setDate(rs.getDate("fecha_ingreso"));
        txtFechaCaducidad.setDate(rs.getDate("fecha_caducidad"));
        txtDescripcion.setText(rs.getString("descripcion"));
        txtProcedencia.setText(rs.getString("procedencia"));
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}

        
    }//GEN-LAST:event_tblAlmacenMouseClicked

    private void tblAlmacen2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlmacen2MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_tblAlmacen2MouseClicked

    private void generarPDF() {
try {
    // Creamos un documento y lo abrimos
    Document document = new Document();

    // Pedimos al usuario la ubicación para guardar el archivo
    JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showSaveDialog(this);

    // Si el usuario selecciona una ubicación, guardamos el archivo allí
    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivo = fileChooser.getSelectedFile();
        PdfWriter.getInstance(document, new FileOutputStream(archivo + ".pdf"));
        document.open();

        // Creamos la tabla y le agregamos las columnas
        PdfPTable table = new PdfPTable(7);
        table.addCell("ID");
        table.addCell("Producto");
        table.addCell("Cantidad");
        table.addCell("Fecha de ingreso");
        table.addCell("Fecha de caducidad");
        table.addCell("Descripción");
        table.addCell("Procedencia");

        // Obtenemos los datos de la tabla y los agregamos a la tabla PDF
        DefaultTableModel modeloTabla = (DefaultTableModel) tblAlmacen.getModel();
        int filas = modeloTabla.getRowCount();
        int columnas = modeloTabla.getColumnCount();
        for (int fila = 0; fila < filas; fila++) {
            for (int columna = 0; columna < columnas; columna++) {
                String valor = modeloTabla.getValueAt(fila, columna) != null ? modeloTabla.getValueAt(fila, columna).toString() : "";
                table.addCell(valor);
            }
        }

        // Agregamos la tabla al documento y cerramos el documento
        document.add(table);
        document.close();

        JOptionPane.showMessageDialog(null, "PDF generado exitosamente");
    }
} catch (DocumentException | FileNotFoundException ex) {
    Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
}

}

    
                private int getIdDelRegistroQueDeseasActualizar() {
    int filaSeleccionada = tblAlmacen.getSelectedRow();
    int id = Integer.parseInt(tblAlmacen.getValueAt(filaSeleccionada, 0).toString());
    return id;
}
     
                      private int getIdDelRegistroQueDeseasEliminar() {
    int filaSeleccionada = tblAlmacen.getSelectedRow();
    int id = Integer.parseInt(tblAlmacen.getValueAt(filaSeleccionada, 0).toString());
    return id;
}      
                
                
                private void limpiar(){
        txtProducto.setText(""); 
        txtCantidad.setText("");
        txtFechaIngreso.setDate(null);     
        txtFechaCaducidad.setDate(null);
        txtDescripcion.setText("");
        txtProcedencia.setText("");
    }

 private void cargarTabla2() {
     
     
     
     
    
    DefaultTableModel modeloTabla = (DefaultTableModel) tblAlmacen2.getModel();
    modeloTabla.setRowCount(0);

    PreparedStatement ps;
    ResultSet rs;
    ResultSetMetaData rsmd;
    int columnas;

    int[] anchos = {50, 20};

    for (int i = 0; i < tblAlmacen2.getColumnCount(); i++) {
        tblAlmacen2.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
    }

    try {
        Connection con = Conexion.getConexion();

        ps = con.prepareStatement("SELECT producto, SUM(cantidad) FROM almacen GROUP BY producto");

        rs = ps.executeQuery();
        rsmd = rs.getMetaData();
        columnas = rsmd.getColumnCount();

        while (rs.next()) {
            Object[] fila = new Object[columnas];
            for (int indice = 0; indice < columnas; indice++) {
                fila[indice] = rs.getObject(indice + 1);
            }
            modeloTabla.addRow(fila);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }


}
               
 
        
 private void cargarTabla(){


     DefaultTableModel modeloTabla = (DefaultTableModel) tblAlmacen.getModel();
modeloTabla.setRowCount(0);

PreparedStatement ps;
ResultSet rs;
ResultSetMetaData rsmd;
int columnas;

int[] anchos = {20, 50, 20, 50, 50, 150, 100};

for (int i = 0; i < tblAlmacen.getColumnCount(); i++) {
    tblAlmacen.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
}

try {
    Connection con = Conexion.getConexion();

    ps = con.prepareStatement("SELECT id, producto, cantidad, fecha_ingreso, fecha_caducidad, descripcion, procedencia FROM almacen");

    rs = ps.executeQuery();
    rsmd = rs.getMetaData();
    columnas = rsmd.getColumnCount();

    while (rs.next()) {
        Object[] fila = new Object[columnas];
        for (int indice = 0; indice < columnas; indice++) {
            fila[indice] = rs.getObject(indice + 1);
        }
        modeloTabla.addRow(fila);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}

       
    }
       
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLimpiar;
    private javax.swing.JButton BtnModificar;
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAlmacen;
    private javax.swing.JTable tblAlmacen2;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private com.toedter.calendar.JDateChooser txtFechaCaducidad;
    private com.toedter.calendar.JDateChooser txtFechaIngreso;
    private javax.swing.JTextField txtProcedencia;
    private javax.swing.JTextField txtProducto;
    // End of variables declaration//GEN-END:variables
}
