/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package TRANSICION;

import DATABASE.Conexion;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class L_Medicamentos extends javax.swing.JPanel {

    /**
     * Creates new form L_Medicamentos
     */
    public L_Medicamentos() {
        initComponents();
        
       
        
        cargarTabla_medicamentos();
        cargarTabla_tblMedicamentos1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedicamentos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtFecha_ingreso = new com.toedter.calendar.JDateChooser();
        txtFecha_vencimiento = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedicamentos1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Descripcion", "Cantidad", "Ingreso", "Vencimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMedicamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMedicamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMedicamentos);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Descripcion");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Cantidad");

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCantidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnGuardar.setBackground(new java.awt.Color(0, 102, 255));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(0, 102, 255));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 102, 255));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(0, 102, 255));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Linpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel1.setText("Vencimiento");

        jLabel8.setText("Fecha");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnModificar))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre)
                    .addComponent(txtDescripcion)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFecha_ingreso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(txtFecha_vencimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtFecha_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(txtFecha_vencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        tblMedicamentos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMedicamentos1);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("stock");
        jLabel2.setPreferredSize(new java.awt.Dimension(193, 64));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Ingresos");
        jLabel7.setPreferredSize(new java.awt.Dimension(193, 64));

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setText("PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(302, 302, 302))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(78, 78, 78))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(78, 78, 78))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    
     
      
    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");

    String nombre = txtNombre.getText();
    String descripcion = txtDescripcion.getText();
    String cantidadText = txtCantidad.getText();
    String fechaIngreso = dcn.format(txtFecha_ingreso.getDate());
    String fechaVencimiento = dcn.format(txtFecha_vencimiento.getDate());

    // Verificar que los campos estén llenos
    if (nombre.isEmpty() || descripcion.isEmpty() || cantidadText.isEmpty() || fechaIngreso.isEmpty() || fechaVencimiento.isEmpty()) {
        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                "<h2 style='color: #FF0000;'>Error</h2>" +
                "<p style='color: #808080;'>Por favor, complete todos los campos.</p>" +
                "</body></html>", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar que la cantidad sea un número válido
    int cantidad;
    try {
        cantidad = Integer.parseInt(cantidadText);
        if (cantidad <= 0) {
            JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                    "<h2 style='color: #FF0000;'>Error</h2>" +
                    "<p style='color: #808080;'>La cantidad debe ser un número positivo.</p>" +
                    "</body></html>", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                "<h2 style='color: #FF0000;'>Error</h2>" +
                "<p style='color: #808080;'>La cantidad debe ser un número válido.</p>" +
                "</body></html>", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Resto del código para guardar los datos en la base de datos...
    try {
        Connection con = Conexion.getConexion();
        PreparedStatement ps = con.prepareStatement("INSERT INTO medicamentos(nombre, descripcion, cantidad, fecha_ingreso, fecha_vencimiento) VALUES (?, ?, ?, ?, ?)");

        // Asignar los valores a los parámetros
        ps.setString(1, nombre);
        ps.setString(2, descripcion);
        ps.setInt(3, cantidad);
        ps.setString(4, fechaIngreso);
        ps.setString(5, fechaVencimiento);

        ps.executeUpdate();

        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                "<h2 style='color: #00FF00;'>Éxito</h2>" +
                "<p style='color: #808080;'>Registro guardado correctamente.</p>" +
                "</body></html>", "Éxito", JOptionPane.INFORMATION_MESSAGE);

        // Limpiar los campos o realizar otras acciones necesarias
        limpiar();
        cargarTabla_medicamentos();
        cargarTabla_tblMedicamentos1();
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }


        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

       int fila = tblMedicamentos.getSelectedRow();
    if (tblMedicamentos.getSelectedRow() == -1) {
        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                    "<h2 style='color: #FF0000;'>Error</h2>" +
                    "<p style='color: #808080;'>Seleccione un registro para modificar</p>" +
                    "</body></html>", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
  int id = getIdDelMedicoSeleccionado();
    String nombre = txtNombre.getText();
    String descripcion = txtDescripcion.getText();
    int cantidad = Integer.parseInt(txtCantidad.getText());
    
    
    SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
    
    
    
    String fecha_ingreso = dcn.format(txtFecha_ingreso.getDate());
    String fecha_vencimiento = dcn.format(txtFecha_vencimiento.getDate());
    
  

    if (nombre.isEmpty() || descripcion.isEmpty() || fecha_ingreso.isEmpty() || fecha_vencimiento.isEmpty()) {
        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                    "<h2 style='color: #FF0000;'>Error</h2>" +
                    "<p style='color: #808080;'>Todos los campos son requeridos. Por favor, llena todos los campos antes de continuar</p>" +
                    "</body></html>", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Connection con = Conexion.getConexion();
        PreparedStatement ps = con.prepareStatement("UPDATE medicamentos SET nombre=?, descripcion=?, cantidad=?, fecha_ingreso=?, fecha_vencimiento=? WHERE id=?");
        ps.setString(1, nombre);
        ps.setString(2, descripcion);
        ps.setInt(3, cantidad);  
        ps.setString(4, fecha_ingreso);
        ps.setString(5, fecha_vencimiento);
        ps.setInt(6, id);
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "<html><body style='width: 250px; text-align: center;'>" +
                    "<h2 style='color: #00FF00;'>Éxito</h2>" +
                    "<p style='color: #808080;'>Registro Modificado</p>" +
                    "</body></html>", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        limpiar();
        
        cargarTabla_medicamentos();
        cargarTabla_tblMedicamentos1();
        
        
    } catch(SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }
        
        

    }//GEN-LAST:event_btnModificarActionPerformed

    
    
    

    
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
int row = tblMedicamentos.getSelectedRow(); // Obtener el índice de la fila seleccionada en la tabla
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila.");
        return;
    }
    
    int id = (int) tblMedicamentos.getValueAt(row, 0); // Obtener el valor del ID en la columna 0
    
    try {
        Connection con = Conexion.getConexion();
        PreparedStatement ps = con.prepareStatement("DELETE FROM medicamentos WHERE id = ?");
        ps.setInt(1, id);
        ps.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "Registro eliminado");
        limpiar();
        cargarTabla_medicamentos();
        cargarTabla_tblMedicamentos1();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
       limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    generarPDF();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblMedicamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMedicamentosMouseClicked
      
        
        try {
    int fila = tblMedicamentos.getSelectedRow();
    int id = Integer.parseInt(tblMedicamentos.getValueAt(fila, 0).toString());
    
    PreparedStatement ps;
    ResultSet rs;
    Connection con = Conexion.getConexion();

    ps = con.prepareStatement("SELECT nombre, descripcion, cantidad, fecha_ingreso, fecha_vencimiento FROM medicamentos WHERE id = ?");
    ps.setInt(1, id);
    rs = ps.executeQuery();

    if (rs.next()) {
        txtNombre.setText(rs.getString("nombre"));
        txtDescripcion.setText(rs.getString("descripcion"));
        txtCantidad.setText(String.valueOf(rs.getInt("cantidad")));
        txtFecha_ingreso.setDate(rs.getDate("fecha_ingreso"));
        txtFecha_vencimiento.setDate(rs.getDate("fecha_vencimiento"));
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, e.toString());
}

        
        
        
    }//GEN-LAST:event_tblMedicamentosMouseClicked


    private void limpiar() {
    txtNombre.setText("");
    txtDescripcion.setText("");
    txtCantidad.setText("");
    txtFecha_ingreso.setDate(null);
    txtFecha_vencimiento.setDate(null);
}

  
    
private void generarPDF() {
 try {
        // Creamos un documento y lo abrimos
        Document document = new Document();

        // Pedimos al usuario la ubicación para guardar el archivo
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showSaveDialog(this);

        // Si el usuario selecciona una ubicación, guardamos el archivo allí
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            PdfWriter.getInstance(document, new FileOutputStream(archivo + ".pdf"));
            document.open();

            // Creamos la tabla y le agregamos las columnas
            PdfPTable table = new PdfPTable(2);
            table.addCell("Medicamento");
            table.addCell("Cantidad");

            // Cargamos los datos desde la tabla "tblMedicamentos1"
            DefaultTableModel modeloTabla = (DefaultTableModel) tblMedicamentos1.getModel();
            int filas = modeloTabla.getRowCount();
            for (int i = 0; i < filas; i++) {
                String medicamento = modeloTabla.getValueAt(i, 0).toString();
                String cantidad = modeloTabla.getValueAt(i, 1).toString();
                table.addCell(medicamento);
                table.addCell(cantidad);
            }

            // Agregamos la tabla al documento y cerramos el documento
            document.add(table);
            document.close();

            JOptionPane.showMessageDialog(null, "PDF generado exitosamente");
        }
    } catch (DocumentException | FileNotFoundException ex) {
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
    }
}


    
   
private int getIdDelMedicoSeleccionado() {
    int filaSeleccionada = tblMedicamentos.getSelectedRow();
    int id = Integer.parseInt(tblMedicamentos.getValueAt(filaSeleccionada, 0).toString());
    return id;
}

    
private void cargarTabla_medicamentos() {
    DefaultTableModel modeloTabla = (DefaultTableModel) tblMedicamentos.getModel();
    modeloTabla.setRowCount(0);
    
    PreparedStatement ps;
    ResultSet rs;
    ResultSetMetaData rsmd;
    int columnas;
    
    int[] anchos = {30, 100, 150, 50, 50, 100, 100}; // Ajusta los anchos de las columnas según tus necesidades

    
    for (int i = 0; i < tblMedicamentos.getColumnCount(); i++) {
        tblMedicamentos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
    }
    
    try {
        Connection con = Conexion.getConexion();
        ps = con.prepareStatement("SELECT * FROM medicamentos");
        rs = ps.executeQuery();
        rsmd = rs.getMetaData();
        columnas = rsmd.getColumnCount();
        
        while (rs.next()) {
            Object[] fila = new Object[columnas];
            for (int indice = 0; indice < columnas; indice++) {
                fila[indice] = rs.getObject(indice + 1);
            }
            modeloTabla.addRow(fila);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    }
}







private void cargarTabla_tblMedicamentos1() {

    
    
    
    DefaultTableModel modeloTabla = (DefaultTableModel) tblMedicamentos1.getModel();
    modeloTabla.setRowCount(0);

    PreparedStatement ps;
    ResultSet rs;

    try {
        Connection con = Conexion.getConexion();
        ps = con.prepareStatement("SELECT nombre, SUM(cantidad) AS total_cantidad FROM medicamentos GROUP BY nombre");
        rs = ps.executeQuery();

        while (rs.next()) {
            String nombre = rs.getString("nombre");
            int totalCantidad = rs.getInt("total_cantidad");

            // Verificar si el medicamento ya existe en la tabla medicamentos_stock
            ps = con.prepareStatement("SELECT COUNT(*) AS count FROM medicamentos_stock WHERE nombre = ?");
            ps.setString(1, nombre);
            ResultSet countRs = ps.executeQuery();
            countRs.next();
            int count = countRs.getInt("count");

            if (count > 0) {
                // Actualizar la cantidad del medicamento existente
                ps = con.prepareStatement("UPDATE medicamentos_stock SET cantidad = ? WHERE nombre = ?");
                ps.setInt(1, totalCantidad);
                ps.setString(2, nombre);
                ps.executeUpdate();
            } else {
                // Insertar un nuevo registro para el medicamento
                ps = con.prepareStatement("INSERT INTO medicamentos_stock (nombre, cantidad) VALUES (?, ?)");
                ps.setString(1, nombre);
                ps.setInt(2, totalCantidad);
                ps.executeUpdate();
            }
        }

        // Cargar los datos actualizados en la tabla tblMedicamentos1
        ps = con.prepareStatement("SELECT nombre, cantidad FROM medicamentos_stock");
        rs = ps.executeQuery();

        while (rs.next()) {
            String nombre = rs.getString("nombre");
            int cantidad = rs.getInt("cantidad");

            Object[] fila = {nombre, cantidad};
            modeloTabla.addRow(fila);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.toString());
    } 
    
}
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMedicamentos;
    private javax.swing.JTable tblMedicamentos1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private com.toedter.calendar.JDateChooser txtFecha_ingreso;
    private com.toedter.calendar.JDateChooser txtFecha_vencimiento;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
